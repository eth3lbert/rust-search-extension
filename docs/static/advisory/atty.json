[
  {
    "advisory": {
      "id": "RUSTSEC-2021-0145",
      "package": "atty",
      "title": "Potential unaligned read",
      "description": "On windows, `atty` dereferences a potentially unaligned pointer.\n\nIn practice however, the pointer won't be unaligned unless a custom global allocator is used.\n\nIn particular, the `System` allocator on windows uses `HeapAlloc`, which guarantees a large enough alignment.\n\n# atty is Unmaintained\n\nA Pull Request with a fix has been provided over a year ago but the maintainer seems to be unreachable.\n\nLast release of `atty` was almost 3 years ago.\n\n## Possible Alternative(s)\n\nThe below list has not been vetted in any way and may or may not contain alternatives;\n\n - [is-terminal](https://crates.io/crates/is-terminal)\n - std::io::IsTerminal *nightly-only experimental*",
      "date": "2021-07-04",
      "aliases": [],
      "related": [],
      "collection": "crates",
      "categories": [],
      "keywords": [
        "unaligned-read"
      ],
      "cvss": null,
      "informational": "unsound",
      "references": [
        "https://github.com/softprops/atty/pull/51",
        "https://github.com/softprops/atty/issues/57"
      ],
      "source": null,
      "url": "https://github.com/softprops/atty/issues/50",
      "withdrawn": null
    },
    "affected": {
      "arch": [],
      "os": [
        "windows"
      ],
      "functions": {}
    },
    "versions": {
      "patched": [],
      "unaffected": []
    }
  }
]