[
  {
    "advisory": {
      "id": "RUSTSEC-2021-0028",
      "package": "toodee",
      "title": "Multiple memory safety issues in insert_row",
      "description": "When inserting rows from an iterator at a particular index, `toodee` would shift\nitems over, duplicating their ownership. The space reserved for the new elements\nwas based on the `len()` returned by the `ExactSizeIterator`.\n\nThis could result in elements in the array being freed twice if the iterator\npanics. Uninitialized or previously freed elements could also be exposed if the\n`len()` didn't match the number of elements.\n\nThese issues were fixed in commit `ced70c17` by temporarily setting the length\nof the array smaller while processing it and adding assertions on the number\nof elements returned by the iterator.",
      "date": "2021-02-19",
      "aliases": [
        "CVE-2021-28028",
        "CVE-2021-28029"
      ],
      "related": [],
      "collection": "crates",
      "categories": [
        "memory-corruption"
      ],
      "keywords": [
        "memory-safety",
        "double-free"
      ],
      "cvss": null,
      "informational": null,
      "references": [],
      "source": null,
      "url": "https://github.com/antonmarsden/toodee/issues/13",
      "withdrawn": null
    },
    "affected": {
      "arch": [],
      "os": [],
      "functions": {
        "toodee::TooDee::insert_row": [
          "<0.3.0"
        ]
      }
    },
    "versions": {
      "patched": [
        ">=0.3.0"
      ],
      "unaffected": []
    }
  }
]